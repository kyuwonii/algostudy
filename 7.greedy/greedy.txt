탐욕 알고리즘 
: 미리 정한 기준에 따라서 매번 가장 좋아보이는 답을 선택.

최적화 문제를 사용한다.
'해를 구할 당시에' 가장 최적인 해를 찾는 것이 핵심.
동적계획법 보다 효율적이지만, 반드시 최적의 해는 아닌 것이 단점.

알고리즘 구조
1. 해 선택하기 : 지금 가장 최적 해 구하고, 부분 해 집합에 넣어놓기.
2. 적절성 검사? : 새로운 부분 해 집합이 적절한지 검사한다.
3. 해 검사 : 새로운 부분해 집합이 문제의 해가 되는지 검사,
해가 완성되지 않았다면 1번부터 다시 시작.

예시..(왜 다 이거쓰지?)
최소수의 동전으로 거스름 돈 거슬러주기.

1. 가장 가치가 높은 동전을 우선으로 거스름돈을 구성 -> 제일 적을 것 
-> 가장 가치가 높은 동전을 골라서 부분해 집합에 추가

2. 부분해 집합이 거슬러줄 금액을 초과 하는지 검사. 만약 초과하면 최근에 동전을 삭제,
1로 돌아가서 현재보다 한단계 작은 동전을 추가.

3. 부분해 집합이 거슬러줄 금액과 일치하는지 검사한다. 액수가 모자라면,
1로 돌아가서 부분해 집합에 추가할 동전을 고른다.

문제 1200원에 대해서
알고리즘 대로 하면 500 2개, 100 2개 주는데
사실 제일 좋은건 400 3개 아닌가? //라는 문제점

어려운 점 : 